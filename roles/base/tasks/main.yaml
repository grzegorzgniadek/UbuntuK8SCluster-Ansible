- name: Upgrade all packages
  apt:
    upgrade: full

- name: Disabling Swap on all nodes
  shell: swapoff -a

- name: Commenting Swap entries in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '(^/.*swap*)'
    replace: '# \1'

- name: Iptables Allow TCP
  iptables:
    chain: INPUT
    destination_port: "{{ item }}"
    jump: ACCEPT
    protocol: tcp
  with_items: "{{ ports_tcp }}"

- name: Iptables Allow UDP
  iptables:
    chain: INPUT
    destination_port: "{{ item }}"
    jump: ACCEPT
    protocol: udp
  with_items: "{{ ports_udp }}"

- name: Iptables ESTABLISHED,RELATED
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: Firewall rule - drop any traffic without rule
  iptables:
    chain: INPUT
    policy: DROP

- name: Install dependencies
  apt: 
    name: "{{ item }}"
  with_items:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release

- name: Save iptables
  shell: iptables-save > /etc/iptables/rules.v4

- name: Install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-{{ ansible_system|lower }}-{{ ansible_architecture}}
    dest: /usr/local/bin/docker-compose

- name: Change mod on docker-compose
  file:
    path: /usr/local/bin/docker-compose
    mode: '777'

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename']|lowercase }} stable
    state: present

- name: Install docker
  apt: 
    update_cache: yes
    name: "{{ packages }}"
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

- name: Change docker daemon cgroup driver
  copy:
          content: |
                  {
                  "exec-opts": ["native.cgroupdriver=systemd"]
                  }
          dest: /etc/docker/daemon.json

- name: Restart Docker Daemon
  service: 
    name: docker 
    state: restarted
    enabled: yes

- name: Add Kubernetes Autocomplete
  lineinfile:
    path: ~/.bashrc
    line: source <(kubectl completion bash)
