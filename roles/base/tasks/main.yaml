- name: Upgrade all packages
  apt:
    upgrade: full

- name: Disabling Swap on all nodes
  shell: swapoff -a

- name: Commenting Swap entries in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '(^/.*swap*)'
    replace: '# \1'

- name: Iptables Allow TCP
  iptables:
    chain: INPUT
    destination_port: "{{ item }}"
    jump: ACCEPT
    protocol: tcp
  with_items: "{{ ports_tcp }}"

- name: Iptables Allow UDP
  iptables:
    chain: INPUT
    destination_port: "{{ item }}"
    jump: ACCEPT
    protocol: udp
  with_items: "{{ ports_udp }}"

- name: Iptables ESTABLISHED,RELATED
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: Firewall rule - drop any traffic without rule
  iptables:
    chain: INPUT
    policy: DROP

- name: Install dependencies
  apt: 
    name: "{{ item }}"
  with_items:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - apt-transport-https

- name: Save iptables
  shell: iptables-save > /etc/iptables/rules.v4

- name: Install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-{{ ansible_system|lower }}-{{ ansible_architecture}}
    dest: /usr/local/bin/docker-compose

- name: Change mod on docker-compose
  file:
    path: /usr/local/bin/docker-compose
    mode: '777'

- name: Add Docker apt key.
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present

- name: Add Docker repository.
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    update_cache: true

- name: Install docker
  apt: 
    update_cache: yes
    name: "{{ item }}"
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    
- name: Change docker daemon cgroup driver
  copy:
          content: |
                  {
                  "exec-opts": ["native.cgroupdriver=systemd"]
                  }
          dest: /etc/docker/daemon.json

- name: Restart Docker Daemon
  service: 
    name: docker 
    state: restarted
    enabled: yes

- name: Add gpg key for kubernetes repository
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add kubernetes repository into sources list
  apt_repository:
    repo: "deb  https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    update_cache: yes
    filename: kubernetes

- name: Install Kubeadm Software
  apt:
    name: ['kubelet', 'kubeadm', 'kubectl']
    state: present
    update_cache: yes

- name: Hold version of software
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl

- name: Reset old kubeadm settings
  shell: |
   kubeadm reset -f

- name: Add Kubernetes Autocomplete
  lineinfile:
    path: ~/.bashrc
    line: source <(kubectl completion bash)
    
- name: Add Kubectl autocomplete system-wide
  shell: kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null
